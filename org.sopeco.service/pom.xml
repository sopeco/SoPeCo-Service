<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>org.sopeco.service</groupId>
	<artifactId>org.sopeco.service</artifactId>
	<packaging>war</packaging>
	<version>1.0.1-SNAPSHOT</version>
	<name>Software Performance Cockpit - Service</name>

	<!-- ================PROPERTIES================= -->
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<sopeco.version>5.0.2</sopeco.version> <!-- the version must be at least 5.0.2 to have no conflict using jersey-test-framework -->
		<jersey.version>2.7</jersey.version>
		<jax-rs.version>2.0</jax-rs.version>
		<jackson.version>2.3.0</jackson.version>
		<qos-logback.version>1.0.13</qos-logback.version>
		<org.apache.maven.jar-plugins.version>2.4</org.apache.maven.jar-plugins.version>
		<org.apache.maven.source-plugin.version>2.2.1</org.apache.maven.source-plugin.version>
		<org.apache.maven.war-plugins.version>2.4</org.apache.maven.war-plugins.version>
		<org.apache.maven.compiler-plugins.version>3.1</org.apache.maven.compiler-plugins.version>
		<org.apache.maven.install-plugins.version>2.5.1</org.apache.maven.install-plugins.version>
	</properties>

	<!-- ================REPOSITORIES================= -->
	<repositories>

		<repository>
			<id>LPE Releases</id>
			<name>LPE-releases</name>
			<url>http://i43vm-saas.ipd.uka.de:8081/artifactory/sopeco-release-local</url>
		</repository>

		<repository>
			<id>remote-repos</id>
			<name>Remote Repositories</name>
			<url>http://i43vm-saas.ipd.uka.de:8081/artifactory/remote-repos</url>
		</repository>

	</repositories>

	<!-- ================DEPENDENCIES================= -->
	<dependencies>

		<!-- logging implementation for SLF4J -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${qos-logback.version}</version>
		</dependency>

		<!-- Dependencies to the SoPeCo package -->
		<dependency>
			<groupId>org.sopeco.core</groupId>
			<artifactId>org.sopeco.persistence</artifactId>
			<version>${sopeco.version}</version>
		</dependency>

		<dependency>
			<groupId>org.sopeco.core</groupId>
			<artifactId>org.sopeco.core</artifactId>
			<version>${sopeco.version}</version>
		</dependency>

		<dependency>
			<groupId>org.sopeco.core</groupId>
			<artifactId>org.sopeco.runner</artifactId>
			<version>${sopeco.version}</version>
		</dependency>

		<!-- Jersey dependencies -->
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-servlet</artifactId>
			<version>${jersey.version}</version>
		</dependency>

		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-server</artifactId>
			<version>${jersey.version}</version>
		</dependency>

		<!-- JSON data exchange - These lines automtically enable jackson in jersey -->
		<dependency>
			<groupId>com.fasterxml.jackson.jaxrs</groupId>
			<artifactId>jackson-jaxrs-json-provider</artifactId>
			<version>${jackson.version}</version>
		</dependency>

		<!-- Unittesting dependencies -->
		<dependency>
			<groupId>org.glassfish.jersey.test-framework.providers</groupId>
			<artifactId>jersey-test-framework-provider-grizzly2</artifactId>
			<version>${jersey.version}</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.10</version>
		</dependency>

		<!-- persistence stuff -->
		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>org.eclipse.persistence.jpa</artifactId>
			<version>2.5.1</version>
		</dependency>

		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>javax.persistence</artifactId>
			<version>2.1.0</version>
		</dependency>

	</dependencies>

	<!-- ================BUILD OPTIONS================= -->
	<build>

		<sourceDirectory>src</sourceDirectory>
		<resources>
			<resource>
				<!-- The class files are put anyway into the final jar. But in addition 
				the .java files and the gwt.xml files are included, too. Both are needed 
				in GWT project. And the WebUI is a GWT project. The source files are needed 
				for GWT to compile them into javascript. -->
				<directory>src</directory>
				<includes> 
					<include>**/*.java</include>
					<include>**/*.gwt.xml</include>
				</includes>
			</resource>
			<resource>
				<directory>rsc</directory>
			</resource>
		</resources>
		
		<testSourceDirectory>test</testSourceDirectory>
		<testResources>
			<testResource>
				<directory>rsc</directory>
			</testResource>
		</testResources>

		<!-- define all the outputs -->
		<plugins>

			<!-- used to set the Java version Maven compiles with -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${org.apache.maven.compiler-plugins.version}</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>

			<!-- layout of the created WAR file -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>${org.apache.maven.war-plugins.version}</version>
				<configuration>

					<webXml>rsc/webapp/WEB-INF/web.xml</webXml>
					
					<webResources>
						<resource>
							<directory>rsc</directory>
							<targetPath>/</targetPath>
							<includes>
								<include>**/META-INF/*</include>
							</includes>
						</resource>
					</webResources>

				</configuration>
			</plugin>

			<!-- in addition to the war-file build a jar file -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${org.apache.maven.jar-plugins.version}</version>
				<executions>
					<execution>
						<id>make-a-jar</id>
						<phase>compile</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- move the jar into the local repository after building -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<version>${org.apache.maven.install-plugins.version}</version>
				<executions>
					<execution>
						<phase>install</phase>
						<goals>
							<goal>install-file</goal>
						</goals>
						<configuration>
							<packaging>jar</packaging>
							<artifactId>${project.artifactId}</artifactId>
							<groupId>${project.groupId}</groupId>
							<version>${project.version}</version>
							<file>
								${project.build.directory}/${project.artifactId}-${project.version}.jar
							</file>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>

	</build>

</project>
